var MmNavbar = React.createClass({
    getInitialState: function() {
        return {
            user: readURI(readURI() - 1),
            results: [],
            overflow: 'hidden',
            borderBottomRadius: 5
        };
    },
    search: function(event) {
        if (event.target.value)
        $.ajax({
            url: '/mm_users/' + this.state.user + '/search',
            contentType: 'application/json; charset=utf-8',
            method: 'GET',
            async: true,
            data: { query: event.target.value },
            success: (response) => {
                let returning = []
                if (response.status == 'ok')
                JSON.parse(response.data).forEach((obj) => {
                    console.debug(obj);
                    returning.push(
                        <div className="search-result">
                            <%= image_tag( 'mm_users/profile-pictures/default.svg' ) %>
                            <pre>{obj.first_name}, {obj.last_name}</pre>
                        </div>
                    )
                });
                if (returning.length)
                this.setState({
                    results: returning,
                    overflow: 'visible',
                    borderBottomRadius: 0
                });
            }
        });
    },
    expand: function() {
        if (this.state.results.length)
        this.setState({
            overflow: 'visible',
            borderBottomRadius: 0
        });
    },
    contract: function() {
        this.setState({
            overflow: 'hidden',
            borderBottomRadius: 5
        });
    },
    render: function() {
        if (document.querySelector('body').id.match(/messenger/i))
        return (
            <nav id="navbar-container">
                <CircularButton opaque={false}
                    size={40}
                    icon='mdi mdi-menu mdi-24px mdi-light'
                    id="menu"
                    position='relative'/>
                <CircularButton opaque={false}
                    size={40}
                    icon='mdi mdi-settings mdi-24px mdi-light'
                    id="settings"
                    position='relative'/>
                <div id="search-container"
                    onFocus={this.expand}
                    onBlur={this.contract}
                    style={{
                        overflow: this.state.overflow,
                        borderBottomLeftRadius: this.state.borderBottomRadius + 'px',
                        borderBottomRightRadius: this.state.borderBottomRadius + 'px'
                    }}>
                    <div id="search-bar">
                        <i className="mdi mdi-magnify mdi-24px mdi-dark"></i>
                        <input type="search"
                            placeholder="Search for poeple"
                            onChange={this.search}
                            autoComplete="no"/>
                    </div>
                    {this.state.results}
                </div>
                <CircularButton opaque={false}
                    size={40}
                    icon='mdi mdi-message-plus mdi-24px mdi-light'
                    id="compose"
                    position='relative'/>
                <CircularButton opaque={false}
                    size={40}
                    icon='mdi mdi-information-outline mdi-24px mdi-light'
                    id="about"
                    position='relative'/>
            </nav>
        )
    }
});

var menu_out = false;
var details_menu_out = false;
var settings_dropdown_pos = 0;

// Simple function to adjust the predetermined positioning of the
function position_settings_dropdown() {
    settings_dropdown_pos = parseInt($('#menu').css('marginLeft')) + parseInt($('#menu').css('marginRight')) + parseInt($('#settings').css('marginLeft'));
};

$(document).on('turbolinks:load', () => {
if ($('body').is('#messenger'))
{

    // Presets
    position_settings_dropdown();
    $('.checkbox-ripple').css('transform', 'scale(0)');
    if (getBrowserType() == 'Chrome') $('#settings-dropdown-arrow').css('transform', 'translateX(-22px)');
    // Menu mechanics
    $('#menu').click( (event) => {
        event.stopPropagation();
        $('html').click(function() {
            $('menu').animate({'margin-left': '-335px'}, 200);
        });
        $('menu').animate({'margin-left': '0'}, 200);
    });
    $('menu').click( (event) => {
        event.stopPropagation();
    });
    // Settings button & menu mechanics
    $('#settings').click( (event) => {
        position_settings_dropdown();
        $('#settings-dropdown').css('left', settings_dropdown_pos + 'px');
        $('#settings-dropdown').addClass('revealed').css('display', 'block').removeClass('hidden');
        setTimeout( () => {
            $('.sd-index').css('display', 'block');
            $('.sd-divider').css('display', 'block');
        }, 400);
        event.stopPropagation();
        $('html').click( () => {
            $('#settings-dropdown').removeClass('revealed').addClass('hidden');
        });
    });
    $('#settings-dropdown').click( (event) => {
        event.stopPropagation();
    });
    // About menu mechanics
    $('#about').click( () => {
        if (!details_menu_out) {
            $('#details-container').removeClass('reset').addClass('pressed');
            details_menu_out = true;
        } else {
            $('#details-container').removeClass('pressed').addClass('reset');
            details_menu_out = false;
        };
    });
    $('#search-bar').keyup( () => {

    })

} // endif

});
